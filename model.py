# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EI6vm-Z9N6uPWuZKWaKh3TxyHoUiGQyv
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import joblib

# Load the dataset
data = pd.read_csv("/content/Fish.csv")

# Display the first few rows of the dataset
print(data.head())

# Check for missing values
print(data.isnull().sum())

# Feature selection
X = data[['Length1', 'Length2', 'Length3', 'Height', 'Width']]
y = data['Weight']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R2 Score: {r2}")

# Save the model as a .pkl file
joblib.dump(model, 'fish_weight_model.pkl')
print("Model saved as fish_weight_model.pkl")

from flask import Flask, request, render_template
import joblib

app = Flask(__name__)
model = joblib.load('fish_weight_model.pkl')

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    # Get input values from the form
    length1 = float(request.form['length1'])
    length2 = float(request.form['length2'])
    length3 = float(request.form['length3'])
    height = float(request.form['height'])
    width = float(request.form['width'])

    # Make prediction
    input_data = [[length1, length2, length3, height, width]]
    prediction = model.predict(input_data)

    # Render the result
    return render_template('index.html', prediction_text=f'Predicted Weight: {prediction[0]:.2f} grams')

if __name__ == '__main__':
    app.run(debug=False)